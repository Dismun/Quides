-- MySQL Script generated by MySQL Workbench
-- Tue Nov 28 18:47:00 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbquides
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbquides
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbquides` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish_ci ;
USE `dbquides` ;

-- -----------------------------------------------------
-- Table `dbquides`.`niveles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`niveles` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripción del nivel del punto de trabajo',
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Código abreviado que identifique el nivel en cuadricula',
  `colorrgb` VARCHAR(6) NOT NULL DEFAULT '000000' COMMENT 'Color RGB que representa al nivel',
  `nivel` INT NOT NULL COMMENT 'Numero que representa el orden de los niveles, pueden expresarse en centenas para tener la posibiliad de intercalar niveles en el futuro.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`centros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`centros` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de Reginstro',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Nombre del centro',
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Código qeu identifique al centro de forma abreviada.',
  `color` VARCHAR(6) NOT NULL COMMENT 'Color RGB que identifique al centro.',
  `direccion` VARCHAR(45) NULL,
  `telefonos` VARCHAR(25) NULL,
  `poblacion` VARCHAR(20) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`puntos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`puntos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `descripcion` VARCHAR(45) NOT NULL,
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Abreviatura que identifique el punto o ubicación de trabajo',
  `idcentro` INT NOT NULL COMMENT 'Identificador del centro donde está ubicado el punto de trabajo',
  `idnivel` INT NOT NULL COMMENT 'Identificador de nivel del punto seleccionado. Este identificador relacina el color del nivel para el punto de trabajo.',
  `prioridad` INT NOT NULL COMMENT 'Numero que establezca la prioridad a la hora de repartir personas en las ubicaciones o puntos, preferiblemante en centenas para poder intercalar nuevas ubicaciones en el futuro.',
  `guardia` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_centros_puntos_idx` (`idcentro` ASC),
  INDEX `fk_niveles_puntos_idx` (`idnivel` ASC),
  CONSTRAINT `fk_centros_puntos`
    FOREIGN KEY (`idcentro`)
    REFERENCES `dbquides`.`centros` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_niveles_puntos`
    FOREIGN KEY (`idnivel`)
    REFERENCES `dbquides`.`niveles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`turnos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`turnos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de regidtro',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripción de la jornada.',
  `desde` TIME(4) NOT NULL COMMENT 'Hora de inicio del turno',
  `hasta` TIME(4) NOT NULL COMMENT 'Hora de finalización del turno',
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Código o abreviatura que representa al turno M mañana T tarde',
  `activo` TINYINT NOT NULL DEFAULT 1 COMMENT 'Para poder dejar en desuso',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`clave`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`clave` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `orden` INT NOT NULL COMMENT 'Numero preferiblemente en centenas para poder reordenar en el futuro y ajustar cadencia de turnos',
  `idturno` INT NOT NULL COMMENT 'Identificador del turno',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `orden_UNIQUE` (`orden` ASC),
  INDEX `fk_turnos_clave_idx` (`idturno` ASC),
  CONSTRAINT `fk_turnos_clave`
    FOREIGN KEY (`idturno`)
    REFERENCES `dbquides`.`turnos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`personas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`personas` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `nombre` VARCHAR(45) NOT NULL COMMENT 'Nombre de l persona',
  `telefonos` VARCHAR(25) NULL COMMENT 'Teléfonos de contacto',
  `email` VARCHAR(45) NULL COMMENT 'Correo electronico',
  `urlfoto` VARCHAR(45) NULL COMMENT 'Vinculo a una foto de la persona.',
  `activo` TINYINT NOT NULL DEFAULT 1 COMMENT 'Campo para dar de baja o ignorar al personal que interese. ',
  `idequipo` INT NULL COMMENT 'Identificador del equipo al que pertenece esta persona.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `UNQ_nombre` (`nombre` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`chamanes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`chamanes` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `idpersona` INT NOT NULL COMMENT 'Identificador de persona',
  `desde` DATE NOT NULL COMMENT 'Desde fecha desde la cual la persona es chaman (consideración de liberación de clave)',
  `hasta` DATE NULL COMMENT 'Fecha hasta que deja de ser chaman',
  `idpunto` INT NOT NULL COMMENT 'Ubicación asignada al chaman',
  `idturno` INT NOT NULL COMMENT 'Identificador del turno asignado al chaman',
  PRIMARY KEY (`id`),
  INDEX `fk_personas_chamanes_idx` (`idpersona` ASC),
  INDEX `fk_puntos_chamanes_idx` (`idpunto` ASC),
  INDEX `fk_turnos_chamanes_idx` (`idturno` ASC),
  CONSTRAINT `fk_personas_chamanes`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_puntos_chamanes`
    FOREIGN KEY (`idpunto`)
    REFERENCES `dbquides`.`puntos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_turnos_chamanes`
    FOREIGN KEY (`idturno`)
    REFERENCES `dbquides`.`turnos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`categorias_externos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`categorias_externos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `descripcion` VARCHAR(45) NULL COMMENT 'Descripcion de la categoría',
  `activa` TINYINT NOT NULL DEFAULT 1 COMMENT 'Campo para filtrar y poder dejar categorias en desuso.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`persona_externos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`persona_externos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `idpersona` INT NOT NULL COMMENT 'Identificador de la persona',
  `idcategoria` INT NOT NULL COMMENT 'Identificador de la categoría de esa persona',
  `lugar_trabajo` VARCHAR(30) NULL COMMENT 'Lugar donde localizarlo',
  `predisposicion` VARCHAR(45) NULL COMMENT 'Nivel de Disponibilidad',
  `desde` DATE NOT NULL COMMENT 'Desde que dia desempeña esa categoria el trabajador.',
  `hasta` DATE NULL COMMENT 'Hasta que día desempeña esa categoría el trabajador.',
  PRIMARY KEY (`id`),
  INDEX `fk_personas_persona_externos_idx` (`idpersona` ASC),
  INDEX `fk_categoria_persona_externos_idx` (`idcategoria` ASC),
  CONSTRAINT `fk_personas_persona_externos`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categoria_persona_externos`
    FOREIGN KEY (`idcategoria`)
    REFERENCES `dbquides`.`categorias_externos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`calendario_laboral`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`calendario_laboral` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `fecha` DATE NOT NULL COMMENT 'Fecha de la festividad',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripcion de la fiesta',
  `tipo_fiesta` ENUM('Nacional', 'Regional', 'Local', 'Patronal') NOT NULL COMMENT 'Tipo de fiesta',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`sabadosydomingos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`sabadosydomingos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `idcentro` INT NOT NULL COMMENT 'Identificador del centro',
  `sabadosm` TINYINT NOT NULL DEFAULT 0 COMMENT 'Consideración de laborable las sabados por la mañana',
  `sabadost` TINYINT NOT NULL DEFAULT 0 COMMENT 'Consideración de laborable los sabados por la tarde',
  `domingos` TINYINT NOT NULL DEFAULT 0 COMMENT 'Consideración de laborable',
  `desde` DATE NOT NULL COMMENT 'Consideraciones desde la fecha',
  `hasta` DATE NULL COMMENT 'Consideraciones hasta la fecha',
  PRIMARY KEY (`id`),
  INDEX `fk_centros_sabadosydomingos_idx` (`idcentro` ASC),
  CONSTRAINT `fk_centros_sabadosydomingos`
    FOREIGN KEY (`idcentro`)
    REFERENCES `dbquides`.`centros` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`bosquejo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`bosquejo` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `fecha` DATE NOT NULL COMMENT 'Día en cuestión',
  `idpersona` INT NOT NULL COMMENT 'Identificador de trabajador',
  `idturno` INT NOT NULL COMMENT 'Identificador de Turno',
  `idpunto` INT NOT NULL COMMENT 'Identificador de punto o ubicación',
  `bloqueado` TINYINT NOT NULL DEFAULT 0 COMMENT 'Este campo puesto a \"true\" quiere decir que ese registro ya está pasado y no se debe modificar ',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unq_fecha_persona` (`fecha` ASC, `idpersona` ASC, `idturno` ASC),
  INDEX `fk_personas_bosquejo_idx` (`idpersona` ASC),
  INDEX `fk_turnos_bosquejo_idx` (`idturno` ASC),
  INDEX `fk_puntos_bosquejo_idx` (`idpunto` ASC),
  CONSTRAINT `fk_personas_bosquejo`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_turnos_bosquejo`
    FOREIGN KEY (`idturno`)
    REFERENCES `dbquides`.`turnos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_puntos_bosquejo`
    FOREIGN KEY (`idpunto`)
    REFERENCES `dbquides`.`puntos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`tipos_incidencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`tipos_incidencias` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripción de la incidencia.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`incidencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`incidencias` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `idincidencia` INT NOT NULL COMMENT 'identificador al tipo de incidencia',
  `idpersona` INT NOT NULL COMMENT 'Identificador de persona afectada por la incidencia',
  `desde` DATE NOT NULL COMMENT 'Fecha de inicio de la incidencia',
  `hasta` DATE NULL COMMENT 'Fecha de final de incidencia.',
  PRIMARY KEY (`id`),
  INDEX `fk_tipos_incidencias_incidencias_idx` (`idincidencia` ASC),
  INDEX `fk_personas_incidencia_idx` (`idpersona` ASC),
  CONSTRAINT `fk_tipos_incidencias_incidencias`
    FOREIGN KEY (`idincidencia`)
    REFERENCES `dbquides`.`tipos_incidencias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personas_incidencia`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`equipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`equipos` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro\n',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'Descripción y nombre del equipo',
  `codigo` VARCHAR(5) NULL COMMENT 'Abreviatura del equipo',
  `orden` INT NOT NULL COMMENT 'Orden de los equipos preferiblemente en centenas para un posterior ordenamiento',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`sustituciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`sustituciones` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador de registro',
  `idpersona` INT NOT NULL COMMENT 'Identificador de la persona sustituida',
  `idpersona_externa` INT NOT NULL COMMENT 'Identificador del sustituto (persona_externa)',
  `desde` DATE NOT NULL COMMENT 'Fecha de inicio de la sustitución',
  `hasta` DATE NULL COMMENT 'Fecha en la que termina la sustitución',
  PRIMARY KEY (`id`),
  INDEX `fk_persona_sustituciones_idx` (`idpersona` ASC),
  INDEX `fk_persona_externa_sustituciones_idx` (`idpersona_externa` ASC),
  CONSTRAINT `fk_persona_sustituciones`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_persona_externa_sustituciones`
    FOREIGN KEY (`idpersona_externa`)
    REFERENCES `dbquides`.`persona_externos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbquides`.`equipos_composicion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`equipos_composicion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idequipo` INT NOT NULL,
  `idpersona` INT NOT NULL,
  `desde` DATE NOT NULL,
  `hasta` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_equipos_eq_composicion_idx` (`idequipo` ASC),
  INDEX `fk_personas_eq_composicion_idx` (`idpersona` ASC),
  CONSTRAINT `fk_equipos_eq_composicion`
    FOREIGN KEY (`idequipo`)
    REFERENCES `dbquides`.`equipos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personas_eq_composicion`
    FOREIGN KEY (`idpersona`)
    REFERENCES `dbquides`.`personas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `dbquides` ;

-- -----------------------------------------------------
-- Placeholder table for view `dbquides`.`viewbosquejo1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbquides`.`viewbosquejo1` (`fecha` INT, `id` INT, `bloqueado` INT, `nombre` INT, `codigoturno` INT, `turno` INT, `codigopunto` INT, `punto` INT, `colornivel` INT, `nivel` INT, `centro` INT, `colorcentro` INT, `codigocentro` INT);

-- -----------------------------------------------------
-- View `dbquides`.`viewbosquejo1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbquides`.`viewbosquejo1`;
USE `dbquides`;
CREATE  OR REPLACE VIEW `viewbosquejo1` AS
    SELECT SQL_CACHE
        bosquejo.fecha AS fecha,
        bosquejo.id AS id,
        bosquejo.bloqueado AS bloqueado,
        personas.nombre AS nombre,
        turnos.codigo AS codigoturno,
        turnos.descripcion AS turno,
        puntos.codigo AS codigopunto,
        puntos.descripcion AS punto,
        niveles.colorrgb AS colornivel,
        niveles.descripcion AS nivel,
        centros.descripcion AS centro,
        centros.color AS colorcentro,
        centros.codigo AS codigocentro
    FROM
        bosquejo 
			INNER JOIN
        personas ON personas.id = bosquejo.idpersona
            INNER JOIN
        turnos ON turnos.id = bosquejo.idturno
            INNER JOIN
        puntos  ON puntos.id = bosquejo.idpunto
            INNER JOIN
        centros  ON centros.id = puntos.idcentro
            INNER JOIN
        niveles  ON niveles.id = puntos.idnivel;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
